name: CI/CD Eafit-App

on:
  push:
    branches: ["dev", "stg", "main"]
  workflow_dispatch:
    inputs:
      name:
        description: 'Manual workflow dispatch'
        required: true
        default: 'Reason to run the workflow'

env:
  APP_NAME: eafit-app
  NAMESPACE: default
  IMAGE_TAG: ${{ github.sha }}  
  GCP_REGISTRY: us-central1-docker.pkg.dev
  GCP_REPOSITORY: eafit-repository
  GCP_PROJECT_ID: labs-421117
  ASPNETCORE_ENVIRONMENT: Development
  AUTHOR: GitHub Actions
  SQL_CONNECTION: ${{ secrets.SQL_CONNECTION }}

jobs:
  build:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Google
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: ${{ env.GCP_REGISTRY }}/${{ env.GCP_PROJECT_ID }}/${{ env.GCP_REPOSITORY }}/${{ env.APP_NAME }}:${{ env.IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    environment: 
      name: ${{ github.ref_name }}
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Replace tokens
        uses: cschleiden/replace-tokens@v1.2
        with:
          files: '["k8s/*.yml"]'
 
      - name: Login to Google
        uses: docker/login-action@v1 
        with:
          registry: ${{ env.GCP_REGISTRY }}
          username: _json_key
          password: ${{ secrets.GOOGLE_CLOUD_CREDENTIALS }}

    #   - name: Configure kubectl
    #     run: |
    #       curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    #       chmod +x kubectl
    #       sudo mv kubectl /usr/local/bin/

    #   - name: Set up kubeconfig
    #     id: kubeconfig-context
    #     run: |
    #       aws eks update-kubeconfig --name ${{ env.EKS_CLUSTER_NAME }}  --region ${{ vars.AWS_REGION }}

    #   - name: Deploy Configmap to EKS
    #     working-directory: ./  
    #     run: kubectl apply -f ./k8s/configmap.yml

    #   - name: Deploy App to EKS
    #     working-directory: ./
    #     run: kubectl apply -f ./k8s/deployment.yml 